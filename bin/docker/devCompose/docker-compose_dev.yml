# Usage
#   Start:          docker compose up -d
#   With helpers:   docker-compose -f docker-compose.yml -f ./dev/docker-compose.dev.yml up
#   Stop:           docker compose down
#   Destroy:        docker-compose -f docker-compose.yml -f ./dev/docker-compose.dev.yml down -v --remove-orphans
#                   docker compose -f docker-compose.yml down -v --remove-orphans

x-logging: &x-logging
  logging:
    driver: 'json-file'
    options:
      max-file: '5'
      max-size: '10m'
version: '3'

services:

  iotredis:
    image: redis:6.2-alpine
    container_name: iot-redis
    <<: *x-logging
    restart: unless-stopped
    command: >
      redis-server
      --maxmemory            512mb
      --maxmemory-policy     allkeys-lru
      --maxmemory-samples    5
    ports:
      - "6379:6379"
    volumes:
      - iot-redis:/data:rw

  iot-mariadb:
    image: mariadb:10.7 # fix issues when upgrading using: mysql_upgrade -u root -p
    container_name: iot-mariadb
    <<: *x-logging
    restart: unless-stopped
    ports:
      - "3306:3306"
    volumes:
      - iot-mariadb:/var/lib/mysql:rw
    environment:
      - MYSQL_ROOT_PASSWORD=${_IOT_DB_ROOT_PASS}
      - MYSQL_DATABASE=${_IOT_DB_SCHEMA}
      - MYSQL_USER=${_IOT_DB_USER}
      - MYSQL_PASSWORD=${_IOT_DB_PASS}
    command: 'mysqld --innodb-flush-method=fsync'

networks:
  gateway:
  appwrite:
  runtimes:

volumes:
  appwrite-mariadb:
  appwrite-redis:
  appwrite-cache:
  appwrite-uploads:
  appwrite-certificates:
  appwrite-functions:
  appwrite-builds:
  appwrite-influxdb:
  appwrite-config:
  appwrite-executor:
  iot-redis:
  iot-mariadb:


